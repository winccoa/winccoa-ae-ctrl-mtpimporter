<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="de_AT.utf8"></prop>
  </prop>
  <prop name="Size">500 400</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">175 120</prop>
  <prop name="InitAndTermRef">True</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="DPI">96</prop>
  <prop name="PDPI">94.11039611039611</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script isEscaped="1" name="ScopeLib"><![CDATA[#uses &quot;classes/BinManInt/BinManIntRef&quot;
#uses &quot;classes/BinManInt/BinManInt&quot;

shared_ptr&lt;BinManIntRef&gt; binmanintRef;

public void initialize()
{
  mapping shapes;
  shapes.insert(&quot;_rectValue&quot;, getShape(&quot;rectValue&quot;));
  shapes.insert(&quot;_rectStatus&quot;, getShape(&quot;rectStatus&quot;));
  shapes.insert(&quot;_rectDisabled&quot;, getShape(&quot;rectDisabled&quot;));
  binmanintRef = new BinManIntRef(new BinManInt($dp), shapes);
}]]></script>
  <script isEscaped="1" name="Initialize"><![CDATA[main()
{
  initialize();
}
]]></script>
 </events>
 <shapes>
  <shape Name="rectStatus" layerId="0" shapeType="RECTANGLE">
   <properties>
    <prop name="serialId">0</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">190 80</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_Transparent</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">0</prop>
    <prop name="ToolTipText">
     <prop name="de_AT.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="BorderScalable">False</prop>
    <prop SharedPixmap="1" name="FillType">[pattern,[fit,any,pictures/MTP_Icones/Manual__2.svg]]</prop>
    <prop name="Geometry">1 0 0 1.354166666666667 15.50000000000006 71.35416666666664</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">190 80</prop>
    <prop name="Size">21 16</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="rectValue" layerId="0" shapeType="RECTANGLE">
   <properties>
    <prop name="serialId">1</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">165 105</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_Transparent</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">1</prop>
    <prop name="ToolTipText">
     <prop name="de_AT.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="BorderScalable">False</prop>
    <prop SharedPixmap="1" name="FillType">[pattern,[fit,any,pictures/MTP_Icones/True.svg]]</prop>
    <prop name="Geometry">3.266666666666667 0 0 3.266666666666667 -347.9999999999999 -223</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">165 105</prop>
    <prop name="Size">16 16</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="rectDisabled" layerId="0" shapeType="RECTANGLE">
   <properties>
    <prop name="serialId">4</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">190 80</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_Transparent</prop>
    <prop name="BackColor">{255,255,255}</prop>
    <prop name="TabOrder">3</prop>
    <prop name="ToolTipText">
     <prop name="de_AT.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="BorderScalable">False</prop>
    <prop SharedPixmap="1" name="FillType">[pattern,[fit,any,pictures/MTP_Icones/disabled.svg]]</prop>
    <prop name="Geometry">1 0 0 1.354166666666667 15.50000000000006 71.35416666666664</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">190 80</prop>
    <prop name="Size">21 16</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="clickbox" layerId="0" shapeType="RECTANGLE">
   <properties>
    <prop name="serialId">2</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">165 55</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_Transparent</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">2</prop>
    <prop name="ToolTipText">
     <prop name="de_AT.utf8"></prop>
    </prop>
    <prop name="layoutAlignment">AlignNone</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapProjecting,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="BorderScalable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">0.9166666666666654 0 0 0.9999999999999998 23.75000000000028 65.00000000000004</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">165 55</prop>
    <prop name="Size">89.3636363636364 90</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
   <events>
    <script isEscaped="1" name="Clicked"><![CDATA[main(mapping event)
{
  binmanintRef.openFaceplate();
}]]></script>
   </events>
  </shape>
 </shapes>
</panel>
