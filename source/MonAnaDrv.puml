@startuml MonAnaDrv

class MtpViewModelBase {
    - string _dp
    - bool _invalid

    # MtpViewModelBase(const string &dp)
    + bool getInvalid()
    + string getDp()
}

enum UnitType
{

}

class Unit
{
    - UnitType _value
    + string toString()
}

class Source
{
    - bool _channel
    - bool manualAutomatic
    - bool internalAutomatic
    - bool manualOperator
    - bool internalOperator
    - bool manualActive
    - bool internalActive

    # Source(const string &dp)  
    + bool getChannel() 
    + bool getManualAutomatic()
    + bool getInternalAutomatic()
    + bool getManualOperator()  
    + bool getInternalOperator()    
    + bool getManualActive()
    + bool getInternalActive()
    # void setManualActive(const bool &channel)
    # void setInternalActive(const bool &channel)

    ..events..
    + void manualActiveChanged(const bool &active)
    + void internalActiveChanged(const bool &active)
}

class State
{
    - bool _channel
    - bool _offAutomatic
    - bool _operatorAutomatic
    - bool _automaticAutomatic
    - bool _offOperator
    - bool _operatorOperator
    - bool _automaticOperator
    - bool _operatorActive
    - bool _automaticActive
    - bool _offActive

    # State(const string &dp)
    + bool getChannel()
    + bool getOffAutomatic()
    + bool getOperatorAutomatic()
    + bool getAutomaticAutomatic()
    + bool getOffOperator()
    + bool getOperatorOperator()
    + bool getAutomaticOperator()
    + bool getOperatorActive()
    + bool getAutomaticActive()
    + bool getOffActive()
    # void setOffActive(const bool &offActive)
    # void setOperatorActive(const bool &operatorActive)
    # void setAutomaticActive(const bool &automaticActive)

    ..events..
    + void offActiveChanged(const bool &active)
    + void operatorActiveChanged(const bool &active)
    + void automaticActiveChanged(const bool &active)
}

class Monitor
{
    - bool _monitorEnabled
    - bool _monitorSafePosition
    - bool _monitorStaticError
    - bool _monitorDynamicError
    - float _monitorStaticTime
    - float _monitorDynamicTime

    # Monitor(const string &dp)
    + bool getMonitorEnabled()
    + bool getMonitorSafePosition()
    + bool getMonitorStaticError()
    + bool getMonitorDynamicError()
    + float getMonitorStaticTime()
    + float getMonitorDynamicTime()
    # void setMonitorEnabled(const bool &monitorEnabled)

    ..events..
    + void monitorStaticErrorChanged(const bool &staticError)
    + void monitorDynamicErrorChanged(const bool &dynamicError)
}

class MonAnaDrv
{
    - bool _safetyposition
    - bool _safetypositionActive
    - bool _forwardEnabled
    - bool _reverseEnabled
    - bool _stopOperator
    - bool _forwardOperator
    - bool _reverseOperator
    - bool _stopAutomatic
    - bool _forwardAutomatic
    - bool _reverseAutomatic
    - bool _forwardControl
    - bool _reverseControl
    - float _rpmScaleMin
    - float _rpmScaleMax
    - float _rpmMin
    - float _rpmMax
    - float _rpmManual
    - float _rpmInternal
    - float _rpmReadback
    - float _rpm
    - bool _reverseFeedbackSource
    - bool _forwardFeedbackSource
    - bool _forwardFeedbackSignal
    - bool _reverseFeedbackSignal
    - bool _rpmFeedbackSource
    - bool _rpmFeedbackSignal
    - bool _driveSafetyIndicator
    - bool _permissionEnabled
    - bool _permit
    - bool _interlockEnabled
    - bool _interlock
    - bool _protectionEnabled
    - bool _protect
    - bool _resetOperator
    - bool _resetAutomatic
    - float _rpmError
    - bool _rpmAlarmHighEnabled
    - bool _rpmAlarmLowEnabled
    - bool _rpmAlarmHighActive
    - bool _rpmAlarmLowActive
    - float _rpmAlarmHighLimit
    - float _rpmAlarmLowLimit
    
    + MonAnaDrv(const string &dp)
    + WQC getWQC()
    + OSLevel getOSLevel()
    + State getState()
    + Monitor getMonitor()
    + Source getSource()
    + Unit getRpmUnit()
    + bool getSafetyPosition()
    + bool getSafetyPositionActive()
    + bool getForwardEnabled()
    + bool getReverseEnabled()
    + bool getStopOperator()
    + bool getForwardOperator()
    + bool getReverseOperator()
    + bool getStopAutomatic()
    + bool getForwardAutomatic()
    + bool getReverseAutomatic()
    + bool getForwardControl()
    + bool getReverseControl()
    + float getRpmScaleMin()
    + float getRpmScaleMax()
    + float getRpmMin()
    + float getRpmMax()
    + float getRpmManual()
    + float getRpmInternal()
    + float getRpmReadback()
    + float getRpm()
    + bool getReverseFeedbackSource()
    + bool getForwardFeedbackSource()
    + bool getForwardFeedbackSignal()
    + bool getReverseFeedbackSignal()
    + bool getRpmFeedbackSource()
    + bool getRpmFeedbackSignal()
    + bool getDriveSafetyIndicator()
    + bool getPermissionEnabled()
    + bool getPermit()
    + bool getInterlockEnabled()
    + bool getInterlock()
    + bool getProtectionEnabled()
    + bool getProtect()
    + bool getResetOperator()
    + bool getResetAutomatic()
    + float getRpmError()
    + bool getRpmAlarmHighEnabled()
    + bool getRpmAlarmLowEnabled()
    + bool getRpmAlarmHighActive()
    + bool getRpmAlarmLowActive()
    + float getRpmAlarmHighLimit()
    + float getRpmAlarmLowLimit()
    + void setReverseFeedbackSignal(const bool &reverseFeedbackSignal)
    + void setForwardFeedbackSignal(const bool &forwardFeedbackSignal)
    + void setPermit(const bool &permit)
    + void setProtect(const bool &protect)
    + void setInterlock(const bool &interlock)
    + void setRpmAlarmHighLimit(const float &rpmAlarmHighLimit)
    + void setRpmAlarmLowLimit(const float &rpmAlarmLowLimit)

    ..events..
    + void forwardControlChanged(const bool &forwardControl)
    + void reverseControlChanged(const bool &reverseControl)
    + void forwardFeedbackSignalChanged(const bool &forwardFeedbackSignal)
    + void reverseFeedbackSignalChanged(const bool &reverseFeedbackSignal)
    + void rpmFeedbackSignalChanged(const bool &rpmFeedbackSignal)
    + void rpmChanged(const float &rpm)
    + void driveSafetyIndicatorChanged(const bool &driveSafetyIndicator)
    + void rpmAlarmHighActiveChanged(const bool &enabled)
    + void rpmAlarmLowActiveChanged(const bool &enabled)
    + void permitChanged(const bool &permit)
    + void interlockChanged(const bool &interlock)
    + void protectChanged(const bool &protect)
    + void safetyPositionActiveChanged(const bool &active)
    + void rpmErrorChanged(const float &error)
}

MtpViewModelBase <|-- MonAnaDrv
WQC "1" --* "1" MonAnaDrv : _wqc
OSLevel "1" --* "1" MonAnaDrv : _osLevel
State "1" --* "1" MonAnaDrv : _state
Monitor "1" --* "1" MonAnaDrv : _monitor
Source "1" --* "1" MonAnaDrv : _source
Unit "1" --* "1" MonAnaDrv : _rpmUnit
@enduml